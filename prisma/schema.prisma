// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = ""
}

model PlayersOnlineHistory {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  quantity  Int
  createdAt DateTime @default(now())

  @@map("playersOnlineHistory")
}

model PlayerSession {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  characterId String    @db.ObjectId
  character   Character @relation(fields: [characterId], references: [id])
  startedAt   DateTime
  endedAt     DateTime  @default(now())

  @@map("playersSessions")
}

model Death {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  victimId   String    @db.ObjectId
  victim     Character @relation(fields: [victimId], references: [id], name: "victim")
  date       DateTime
  killersIds String[]  @db.ObjectId
  killers    Character @relation(fields: [killersIds], references: [id], name: "killers")
  level      Int
  cause      Int
  creature   Int?
  field      Int?

  @@map("deaths")
}

model Character {
  id               String             @id @default(auto()) @map("_id") @db.ObjectId
  name             String             @unique
  displayName      String             @unique
  sex              Int
  vocation         Int
  level            Int
  residence        Int
  pk               Boolean?
  premium          Boolean
  online           Boolean
  onlineUpdatedAt  DateTime
  deaths           Death[]            @relation(name: "victim")
  frags            Death[]            @relation(name: "killers")
  banishedUntil    DateTime?
  sessions         PlayerSession[]
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  playerSessionDay PlayerSessionDay[]

  @@map("characters")
}

model PlayersOnlineRecord {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  quantity  Int
  world     String   @default("Tibiantis")
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  @@map("playersOnlineRecord")
}

model PlayerSessionDay {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  characterId String    @db.ObjectId
  character   Character @relation(fields: [characterId], references: [id])
  expGained   Int
  playtime    Int //Time in minutes
  endLevel    Int
  startLevel  Int
  updatedAt   DateTime  @updatedAt
  createdAt   DateTime  @default(now())

  @@map("playersSessionsDay")
}
